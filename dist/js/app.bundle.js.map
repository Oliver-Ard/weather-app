{"version":3,"file":"js/app.bundle.js","mappings":"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","sources":["webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://weather-app/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://weather-app/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://weather-app/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://weather-app/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://weather-app/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://weather-app/./node_modules/date-fns/locale/en-US.mjs","webpack://weather-app/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://weather-app/./node_modules/date-fns/constants.mjs","webpack://weather-app/./node_modules/date-fns/toDate.mjs","webpack://weather-app/./node_modules/date-fns/startOfDay.mjs","webpack://weather-app/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://weather-app/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://weather-app/./node_modules/date-fns/constructFrom.mjs","webpack://weather-app/./node_modules/date-fns/startOfYear.mjs","webpack://weather-app/./node_modules/date-fns/getDayOfYear.mjs","webpack://weather-app/./node_modules/date-fns/startOfWeek.mjs","webpack://weather-app/./node_modules/date-fns/startOfISOWeek.mjs","webpack://weather-app/./node_modules/date-fns/getISOWeekYear.mjs","webpack://weather-app/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://weather-app/./node_modules/date-fns/getISOWeek.mjs","webpack://weather-app/./node_modules/date-fns/getWeekYear.mjs","webpack://weather-app/./node_modules/date-fns/startOfWeekYear.mjs","webpack://weather-app/./node_modules/date-fns/getWeek.mjs","webpack://weather-app/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://weather-app/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://weather-app/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://weather-app/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://weather-app/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://weather-app/./node_modules/date-fns/isDate.mjs","webpack://weather-app/./node_modules/date-fns/isValid.mjs","webpack://weather-app/./node_modules/date-fns/format.mjs","webpack://weather-app/./src/modules/Utility.js","webpack://weather-app/./src/modules/DataWeather.js","webpack://weather-app/./src/modules/DisplayWeather.js","webpack://weather-app/./src/modules/Handler.js","webpack://weather-app/./src/index.js"],"sourcesContent":["const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { format } from \"date-fns\";\n\nclass Utility {\n\tstatic formatDate(date) {\n\t\tconst formattedDate = format(date, \"MMMM dd, yyyy\");\n\t\treturn formattedDate;\n\t}\n\n\tstatic formatHour(hour) {\n\t\t// 24h format\n\t\tconst formattedHour = format(hour, \"HH:mm\");\n\t\treturn formattedHour;\n\t}\n\n\tstatic formatDay(day) {\n\t\tconst formattedDay = format(day, \"iiii, do\");\n\t\treturn formattedDay;\n\t}\n\n\tstatic convertHrtoMin(timeStr) {\n\t\t// Split the time string into hours and minutes\n\t\tconst [hourStr, minuteStr] = timeStr.split(\":\");\n\n\t\t// Extract the hour and minute values\n\t\tlet hour = parseInt(hourStr, 10);\n\t\tconst minute = parseInt(minuteStr, 10);\n\t\t// Adjust the hour if it's PM (assuming 12-hour format)\n\t\tif (timeStr.toLowerCase().includes(\"pm\")) {\n\t\t\thour += 12;\n\t\t}\n\n\t\t// Calculate the total minutes past midnight\n\t\tconst totalMinutes = hour * 60 + minute;\n\n\t\treturn totalMinutes;\n\t}\n\n\tstatic convert12hTo24h(time12h) {\n\t\t// Split the time string into hours, minutes, and AM/PM indicator\n\t\tconst [time, indicator] = time12h.split(\" \");\n\t\t// Split the hours and minutes\n\t\tconst [hours, minutes] = time.split(\":\");\n\t\t// Convert hours to number\n\t\tlet hours24 = parseInt(hours, 10);\n\t\t// Adjust hours for PM\n\t\tif (indicator.toLowerCase() === \"pm\") {\n\t\t\thours24 += 12;\n\t\t}\n\t\t// Convert hours back to string and pad with leading zero if necessary\n\t\thours24 = hours24 < 10 ? `0${hours24}` : hours24.toString();\n\t\t// Return the converted time string in 24-hour format\n\t\treturn `${hours24}:${minutes}`;\n\t}\n\n\tstatic convertTemperature(degrees) {\n\t\tconst [value, unit] = degrees.split(\"°\");\n\t\tlet convertedDegrees = parseFloat(value);\n\n\t\t// Covert Celsius degrees into Fahrenheit degrees\n\t\tif (unit === \"C\") {\n\t\t\tconvertedDegrees = (convertedDegrees * (9 / 5) + 32).toFixed(2);\n\t\t\tconst fahrenheit = `${Utility.limitDecimals(convertedDegrees)}°F`;\n\t\t\treturn fahrenheit;\n\t\t}\n\n\t\t// Covert Fahrenheit degrees into Celsius degrees\n\t\tconvertedDegrees = ((convertedDegrees - 32) / (9 / 5)).toFixed(2);\n\t\tconst celsius = `${Utility.limitDecimals(convertedDegrees)}°C`;\n\t\treturn celsius;\n\t}\n\n\tstatic convertSpeed(speed) {\n\t\tconst [value, unit] = speed.split(\" \");\n\t\tlet convertedSpeed = parseFloat(value);\n\n\t\t// Covert km/h to mph\n\t\tif (unit === \"km/h\") {\n\t\t\tconvertedSpeed = (convertedSpeed * 0.621371).toFixed(2);\n\t\t\tconst mph = `${Utility.limitDecimals(convertedSpeed)} mph`;\n\t\t\treturn mph;\n\t\t}\n\n\t\t// // Covert mph to km/h\n\t\tconvertedSpeed = (convertedSpeed * 1.60934).toFixed(2);\n\t\tconst kmph = `${Utility.limitDecimals(convertedSpeed)} km/h`;\n\t\treturn kmph;\n\t}\n\n\tstatic limitDecimals(number) {\n\t\t// Limit digits after the comma if the the second digit is a 0;\n\t\tlet newNumber = number.toString();\n\t\tconst lastChar = newNumber[newNumber.length - 1];\n\n\t\tif (lastChar === \"0\") {\n\t\t\tnewNumber = parseFloat(newNumber).toFixed(1);\n\n\t\t\treturn newNumber;\n\t\t}\n\n\t\treturn newNumber;\n\t}\n\n\tstatic showError(element, msg) {\n\t\tconst msgEl = element;\n\t\tmsgEl.classList.add(\"active\");\n\n\t\t// Split the error message into two sentences, this way it will look better in the 'p' element.\n\t\tconst index = msg.indexOf(\"!\");\n\t\tconst msgPart1 = msg.slice(0, index + 1);\n\t\tconst msgPart2 = msg.slice(index + 1);\n\t\tmsgEl.innerHTML = `\n\t\t\t\t\t\t${msgPart1} <br />\n\t\t\t\t\t\t${msgPart2}\n\t\t\t\t\t`;\n\t}\n\n\tstatic hideError(element) {\n\t\tconst msgEl = element;\n\t\tmsgEl.textContent = \"\";\n\t\tmsgEl.classList.remove(\"active\");\n\t}\n\n\tstatic showSpinner() {\n\t\tconst spinner = document.querySelector(\"[data-info = 'loading-spinner']\");\n\t\tspinner.classList.add(\"active\");\n\t}\n\n\tstatic hideSpinner() {\n\t\tconst spinner = document.querySelector(\"[data-info = 'loading-spinner']\");\n\t\tspinner.classList.remove(\"active\");\n\t}\n}\n\nexport default Utility;\n","class DataWeather {\n\tstatic async fetchData(locationData) {\n\t\t// For this project, it is ok for the API key to appear in the code, because it is a free key. Normally, it must be stored somewhere safe so that it does not appear in the code.\n\t\tconst response = await fetch(\n\t\t\t`https://api.weatherapi.com/v1/forecast.json?key=75424e2741b34276a2475719242403&q=${locationData}&days=3&aqi=no&alerts=no`\n\t\t);\n\n\t\tif (!response.ok) {\n\t\t\tthrow \"Location not found! Location must be in the form of 'City', 'Country' or 'City and Country'.\";\n\t\t}\n\n\t\tconst data = await response.json();\n\t\treturn data;\n\t}\n\n\tstatic async getLocation(fetchedData) {\n\t\tconst data = await this.fetchData(fetchedData);\n\n\t\tconst locationObj = {\n\t\t\tcountry: data.location.country,\n\t\t\tcity: data.location.name,\n\t\t\tlocalTime: data.location.localtime,\n\t\t};\n\t\treturn locationObj;\n\t}\n\n\tstatic async getCurrForecast(fetchedData) {\n\t\tconst data = await this.fetchData(fetchedData);\n\n\t\tconst currForecastObj = {\n\t\t\ttempC: data.current.temp_c,\n\t\t\ttempFeelsC: data.current.feelslike_c,\n\t\t\thumidity: data.current.humidity,\n\t\t\twindKph: data.current.wind_kph,\n\t\t\trainChance: data.forecast.forecastday[0].day.daily_chance_of_rain,\n\t\t\tweatherText: data.current.condition.text,\n\t\t\tweatherIcon: data.current.condition.icon,\n\t\t};\n\t\treturn currForecastObj;\n\t}\n\n\tstatic async get3DayForecast(fetchedData) {\n\t\tconst data = await this.fetchData(fetchedData);\n\t\tconst forecastDays = data.forecast.forecastday;\n\t\tconst days = [];\n\n\t\tforecastDays.forEach((dayData) => {\n\t\t\tconst dayForecastObj = {\n\t\t\t\tdate: dayData.date,\n\t\t\t\tmaxTempC: dayData.day.maxtemp_c,\n\t\t\t\tminTempC: dayData.day.mintemp_c,\n\t\t\t\tweatherIcon: dayData.day.condition.icon,\n\t\t\t};\n\n\t\t\tdays.push(dayForecastObj);\n\t\t});\n\t\treturn days;\n\t}\n\n\tstatic async getAstroInfo(fetchedData) {\n\t\tconst data = await this.fetchData(fetchedData);\n\t\tconst astroObj = {\n\t\t\tsunrise: data.forecast.forecastday[0].astro.sunrise,\n\t\t\tsunset: data.forecast.forecastday[0].astro.sunset,\n\t\t};\n\t\treturn astroObj;\n\t}\n}\n\nexport default DataWeather;\n","import Utility from \"./Utility\";\n\nclass DisplayWeather {\n\tstatic renderLocationInfo(objData) {\n\t\t// LOCATION\n\t\tconst locationEl = document.querySelector(\"[data-info = 'location']\");\n\t\t// --Country--\n\t\tlocationEl.textContent = `, ${objData.country}`;\n\t\t// --City--\n\t\tconst span = document.createElement(\"span\");\n\t\tspan.classList.add(\"thickening\");\n\t\tspan.textContent = objData.city;\n\t\tlocationEl.prepend(span);\n\n\t\t// DATE\n\t\tconst dateEl = document.querySelector(\"[data-info = 'date']\");\n\t\tdateEl.textContent = Utility.formatDate(objData.localTime);\n\n\t\t// HOUR\n\t\tconst hourEl = document.querySelector(\"[data-info = 'hour']\");\n\t\thourEl.textContent = Utility.formatHour(objData.localTime);\n\t}\n\n\tstatic renderCurrForecast(objData) {\n\t\t// FORECAST TEXT\n\t\tconst forecastTextEl = document.querySelector(\"[data-info = 'forecast']\");\n\t\tforecastTextEl.textContent = objData.weatherText;\n\n\t\t// DEGREES\n\t\tconst degreesEl = document.querySelector(\"[data-info = 'degrees']\");\n\t\tdegreesEl.textContent = `${objData.tempC}°C`;\n\n\t\t// WEATHER ICON\n\t\tconst weatherIconEl = document.querySelector(\n\t\t\t\"[data-info = 'weather-icon']\"\n\t\t);\n\t\tweatherIconEl.src = objData.weatherIcon;\n\n\t\t// FELT TEMPERATURE\n\t\tconst feltTempEl = document.querySelector(\"[data-details = 'temp']\");\n\t\tfeltTempEl.textContent = `${objData.tempFeelsC}°C`;\n\n\t\t// HUMIDITY\n\t\tconst humidityEl = document.querySelector(\"[data-details = 'humidity']\");\n\t\thumidityEl.textContent = `${objData.humidity}%`;\n\n\t\t// CHANGE OF RAIN\n\t\tconst rainChanceEl = document.querySelector(\"[data-details = 'rain']\");\n\t\trainChanceEl.textContent = `${objData.rainChance}%`;\n\n\t\t// WIND SPEED\n\t\tconst windSpeedEl = document.querySelector(\"[data-details = 'wind']\");\n\t\twindSpeedEl.textContent = `${objData.windKph} km/h`;\n\t}\n\n\tstatic renderAstroInfo(objData) {\n\t\t// SUNRISE\n\t\tconst sunriseEl = document.querySelector(\"[data-details = 'sunrise']\");\n\t\tsunriseEl.textContent = Utility.convert12hTo24h(objData.sunrise);\n\n\t\t// SUNSET\n\t\tconst sunsetEl = document.querySelector(\"[data-details = 'sunset']\");\n\t\tsunsetEl.textContent = Utility.convert12hTo24h(objData.sunset);\n\t}\n\n\tstatic renderDayForecast(objData) {\n\t\t// DAY\n\t\tconst dayEls = document.querySelectorAll(\"[data-forecast = 'day']\");\n\t\tdayEls[0].textContent = Utility.formatDay(objData[0].date);\n\t\tdayEls[1].textContent = Utility.formatDay(objData[1].date);\n\t\tdayEls[2].textContent = Utility.formatDay(objData[2].date);\n\n\t\t// MAX DEGREE\n\t\tconst maxDegreeEls = document.querySelectorAll(\n\t\t\t\"[data-forecast = 'max-degree']\"\n\t\t);\n\t\tmaxDegreeEls[0].textContent = `${objData[0].maxTempC}°C`;\n\t\tmaxDegreeEls[1].textContent = `${objData[1].maxTempC}°C`;\n\t\tmaxDegreeEls[2].textContent = `${objData[2].maxTempC}°C`;\n\n\t\t// MIN DEGREE\n\t\tconst minDegreeEls = document.querySelectorAll(\n\t\t\t\"[data-forecast = 'min-degree']\"\n\t\t);\n\t\tminDegreeEls[0].textContent = `${objData[0].minTempC}°C`;\n\t\tminDegreeEls[1].textContent = `${objData[1].minTempC}°C`;\n\t\tminDegreeEls[2].textContent = `${objData[2].minTempC}°C`;\n\n\t\t// WEATHER ICON\n\t\tconst iconEls = document.querySelectorAll(\"[data-forecast = 'icon']\");\n\t\ticonEls[0].src = objData[0].weatherIcon;\n\t\ticonEls[1].src = objData[1].weatherIcon;\n\t\ticonEls[2].src = objData[2].weatherIcon;\n\t}\n\n\tstatic switchBgImg(...objects) {\n\t\t// Background image will change depending on whether it is day or night\n\t\tconst localHour = Utility.formatHour(objects[0].localTime);\n\t\tconst { sunrise, sunset } = objects[1];\n\t\t// Convert the hours into minutes so we can see if the local time is between sunrise and sunset\n\t\tconst localHourMin = Utility.convertHrtoMin(localHour);\n\t\tconst sunriseMin = Utility.convertHrtoMin(sunrise);\n\t\tconst sunsetMin = Utility.convertHrtoMin(sunset);\n\n\t\tif (localHourMin >= sunriseMin && localHourMin <= sunsetMin) {\n\t\t\tdocument.body.classList.remove(\"night\");\n\t\t} else {\n\t\t\tdocument.body.classList.add(\"night\");\n\t\t}\n\t}\n\n\tstatic switchWeatherUnits() {\n\t\t// MAIN DEGREES\n\t\tconst degreesEl = document.querySelector(\"[data-info = 'degrees']\");\n\t\tdegreesEl.textContent = Utility.convertTemperature(degreesEl.textContent);\n\n\t\t// FELT TEMPERATURE\n\t\tconst feltTempEl = document.querySelector(\"[data-details = 'temp']\");\n\t\tfeltTempEl.textContent = Utility.convertTemperature(feltTempEl.textContent);\n\n\t\t// MAX DEGREE\n\t\tconst maxDegreeEls = document.querySelectorAll(\n\t\t\t\"[data-forecast = 'max-degree']\"\n\t\t);\n\t\tmaxDegreeEls[0].textContent = Utility.convertTemperature(\n\t\t\tmaxDegreeEls[0].textContent\n\t\t);\n\t\tmaxDegreeEls[1].textContent = Utility.convertTemperature(\n\t\t\tmaxDegreeEls[1].textContent\n\t\t);\n\t\tmaxDegreeEls[2].textContent = Utility.convertTemperature(\n\t\t\tmaxDegreeEls[2].textContent\n\t\t);\n\n\t\t// MIN DEGREE\n\t\tconst minDegreeEls = document.querySelectorAll(\n\t\t\t\"[data-forecast = 'min-degree']\"\n\t\t);\n\t\tminDegreeEls[0].textContent = Utility.convertTemperature(\n\t\t\tminDegreeEls[0].textContent\n\t\t);\n\t\tminDegreeEls[1].textContent = Utility.convertTemperature(\n\t\t\tminDegreeEls[1].textContent\n\t\t);\n\t\tminDegreeEls[2].textContent = Utility.convertTemperature(\n\t\t\tminDegreeEls[2].textContent\n\t\t);\n\n\t\t// WIND SPEED\n\t\tconst windSpeedEl = document.querySelector(\"[data-details = 'wind']\");\n\t\twindSpeedEl.textContent = Utility.convertSpeed(windSpeedEl.textContent);\n\t}\n}\n\nexport default DisplayWeather;\n","import Utility from \"./Utility\";\nimport DataWeather from \"./DataWeather\";\nimport DisplayWeather from \"./DisplayWeather\";\n\nclass Handler {\n\tstatic errorMsgEl = document.querySelector(\"[data-info = 'error-msg']\");\n\n\tstatic async handleWeatherData(fetchedData) {\n\t\ttry {\n\t\t\tUtility.showSpinner();\n\t\t\tconst location = await DataWeather.getLocation(fetchedData);\n\t\t\tDisplayWeather.renderLocationInfo(location);\n\n\t\t\tconst currForecast = await DataWeather.getCurrForecast(fetchedData);\n\t\t\tDisplayWeather.renderCurrForecast(currForecast);\n\n\t\t\tconst threeDayForecast = await DataWeather.get3DayForecast(fetchedData);\n\t\t\tDisplayWeather.renderDayForecast(threeDayForecast);\n\n\t\t\tconst astroInfo = await DataWeather.getAstroInfo(fetchedData);\n\t\t\tDisplayWeather.renderAstroInfo(astroInfo);\n\n\t\t\tDisplayWeather.switchBgImg(location, astroInfo);\n\t\t\tUtility.hideError(this.errorMsgEl);\n\t\t\tUtility.hideSpinner();\n\t\t} catch (error) {\n\t\t\tUtility.showError(this.errorMsgEl, error);\n\t\t\tUtility.hideSpinner();\n\t\t}\n\t}\n\n\tstatic handleWeatherForm(e) {\n\t\te.preventDefault();\n\n\t\tconst locationInput = document.querySelector(\"#location\");\n\t\tHandler.handleWeatherData(locationInput.value);\n\t\tlocationInput.value = \"\";\n\t}\n\n\tstatic handleDocumentBtns(e) {\n\t\tconst { target } = e;\n\t\tconst targetParent = e.target.parentNode;\n\n\t\tswitch (target.dataset.button || targetParent.dataset.button) {\n\t\t\tcase \"switch-units\": {\n\t\t\t\tDisplayWeather.switchWeatherUnits();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// no default\n\t\t}\n\t}\n}\n\nexport default Handler;\n","import \"./main.css\";\n\nimport Handler from \"./modules/Handler\";\n\nfunction initApp() {\n\tconst weatherForm = document.querySelector(\"[data-form = 'weather']\");\n\n\t// EVENT LISTENERS\n\tweatherForm.addEventListener(\"submit\", Handler.handleWeatherForm);\n\tdocument.addEventListener(\"click\", Handler.handleDocumentBtns);\n\twindow.addEventListener(\"DOMContentLoaded\", () => {\n\t\tHandler.handleWeatherData(\"Bucharest\");\n\t});\n}\n\ninitApp();\n"],"names":["formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","options","width","String","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","value","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","localize","ordinalNumber","dirtyNumber","_options","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","array","predicate","length","findIndex","pattern","test","object","Object","prototype","hasOwnProperty","call","findKey","valueCallback","rest","slice","parsePattern","parseInt","parseResult","any","index","enUS","code","formatDistance","token","count","result","tokenValue","replace","toString","addSuffix","comparison","formatRelative","_date","_baseDate","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","millisecondsInDay","toDate","argument","argStr","Date","constructor","NaN","startOfDay","setHours","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","differenceInCalendarDays","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","constructFrom","startOfYear","cleanDate","setFullYear","getDayOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","startOfISOWeekYear","fourthOfJanuary","getISOWeek","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","startOfWeekYear","firstWeek","getWeek","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","d","a","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","trunc","dayPeriodEnum","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","timeLongFormatter","longFormatters","p","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isDate","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","format","formatStr","originalDate","RangeError","parts","map","substring","firstCharacter","longFormatter","join","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","input","_message","subject","message","console","warn","includes","warnOrThrowProtectedError","formatter","matched","Utility","_classCallCheck","hour","timeStr","_timeStr$split2","_slicedToArray","split","hourStr","minuteStr","minute","time12h","_time12h$split2","indicator","_time$split2","hours24","concat","degrees","_degrees$split2","convertedDegrees","parseFloat","toFixed","limitDecimals","speed","_speed$split2","convertedSpeed","newNumber","element","msg","msgEl","classList","add","indexOf","msgPart1","msgPart2","innerHTML","textContent","remove","document","querySelector","_regeneratorRuntime","r","n","o","defineProperty","Symbol","iterator","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","l","f","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","arguments","apply","err","undefined","_defineProperties","target","props","descriptor","_toPropertyKey","toPrimitive","_toPrimitive","Constructor","DataWeather","instance","protoProps","staticProps","_fetchData","_callee","locationData","response","data","_context","fetch","ok","json","_x","_getLocation","_callee2","fetchedData","locationObj","_context2","this","fetchData","country","location","city","localTime","localtime","_x2","_getCurrForecast","_callee3","currForecastObj","_context3","tempC","current","temp_c","tempFeelsC","feelslike_c","humidity","windKph","wind_kph","rainChance","forecast","forecastday","daily_chance_of_rain","weatherText","condition","text","weatherIcon","icon","_x3","_get3DayForecast","_callee4","forecastDays","days","_context4","dayData","dayForecastObj","maxTempC","maxtemp_c","minTempC","mintemp_c","_x4","_getAstroInfo","_callee5","astroObj","_context5","sunrise","astro","sunset","_x5","DisplayWeather","objData","locationEl","span","createElement","prepend","formatDate","formatHour","src","convert12hTo24h","dayEls","querySelectorAll","formatDay","maxDegreeEls","minDegreeEls","iconEls","_len","objects","_key","localHour","_objects$","localHourMin","convertHrtoMin","sunriseMin","sunsetMin","body","degreesEl","convertTemperature","feltTempEl","windSpeedEl","convertSpeed","obj","Handler","currForecast","threeDayForecast","astroInfo","showSpinner","getLocation","renderLocationInfo","getCurrForecast","renderCurrForecast","get3DayForecast","renderDayForecast","getAstroInfo","renderAstroInfo","switchBgImg","hideError","errorMsgEl","hideSpinner","t0","showError","_handleWeatherData","preventDefault","locationInput","handleWeatherData","targetParent","parentNode","dataset","button","switchWeatherUnits","addEventListener","handleWeatherForm","handleDocumentBtns","window"],"sourceRoot":""}